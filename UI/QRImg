<!--二维码图片-->
<template>
  <div class="uk-text-center" style="display: inline-block;">
    <img ref="qrImg" :src="imgData" style="height: 100%;">
    <a v-if="ifDownloadShow"
       class="uk-link uk-position-center-right uk-margin-large-right"
       title="点击下载"
       :href="imgData" :download="imgData">
      点击下载
    </a>
  </div>
</template>
<script>
  import QRCode from 'qrcode'

  export default {
    props: {
      //二维码字符
      qrStr: {default: ""},
      // 描述
      description: {default: ""},

      // 描述高度
      descFontSize: {default: 15},

      // 描述 和 二维码 间隔
      descPaddingTop: {default: 0},

      ifDownloadShow: {default: false}
    },
    data() {
      return {
        elCanvas: document.createElement("canvas"),
        elImg: document.createElement("img"),
        imgData: ""
      }
    },
    mounted() {
      this.setQrImgSrc();
    },
    methods: {
      setQrImgSrc() {
        if (!this.qrStr) return this.$refs.qrImg.src = "";
        QRCode.toDataURL(this.qrStr)
          .then(url => {
            // console.log("qrStr",url);
            // this.$refs.qrImg.src=url
            // 二维码图片
            this.elImg.src = url;
            this.elImg.onload = () => {
              let ctx = this.elCanvas.getContext("2d");
              this.elCanvas.width = this.elImg.width;
              this.elCanvas.height = this.elImg.height + this.descFontSize + this.descPaddingTop;
              ctx.drawImage(this.elImg, 0, 0, this.elImg.width, this.elImg.height);

              // 增加背景色
              ctx.fillStyle = "white";
              ctx.fillRect(0, this.elImg.height, this.elImg.width, this.descPaddingTop + this.descFontSize);

              // 增加 描述字段
              ctx.fillStyle = "black";
              ctx.font = this.descFontSize + "px Georgia";
              let zFontStart = this.elImg.width / 2 - this.description.gblen() * this.descFontSize / 4;
              ctx.fillText(this.description, zFontStart, this.elImg.height + this.descPaddingTop + this.descFontSize / 2);
              //获取图片数据
              let zImgData = this.elCanvas.toDataURL();
              // this.$refs.qrImg.src=zImgData
              this.imgData = zImgData
            };

          })
          .catch(err => {
            // console.log("err",err);
            this.$refs.qrImg.src = ""
          })
      },

    },
    watch: {
      qrStr() {
        this.setQrImgSrc();
      }
    }
  }
</script>
